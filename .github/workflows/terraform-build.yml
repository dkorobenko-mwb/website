name: 'Terraform Build'

on:
  workflow_dispatch:
    inputs:
      terraform_operation:
        description: "Terraform operation: plan, apply, destroy"
        required: true
        default: "plan"
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  AWS_ACCOUNT_NUMBER: ${{ secrets.AWS_ACCOUNT_NUMBER }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: eu-central-1
  ECR_REPOSITORY: app-repo
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"

jobs:
  deploy-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ env.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan
        if: "${{ github.event.inputs.terraform_operation == 'plan' }}"

      - name: Terraform apply
        run: terraform apply --auto-approve
        if: "${{ github.event.inputs.terraform_operation == 'apply' }}"

      - name: Terraform destroy
        run: |
          aws ecr delete-repository --repository-name ${{ env.ECR_REPOSITORY }} --force
          terraform destroy --auto-approve
        if: "${{ github.event.inputs.terraform_operation == 'destroy' }}"
        

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Docker login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.AWS_ACCOUNT_NUMBER }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          username: ${{ env.AWS_ACCESS_KEY_ID }}
          password: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Build, tag, and push image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Application URL
        run: echo Application URL is $(terraform output app_url)